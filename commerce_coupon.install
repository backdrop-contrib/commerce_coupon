<?php


/**
 * Implements hook_schema().
 */
function commerce_coupon_schema() {
  $schema = array();

  $schema['commerce_coupon'] = array(
    'description' => 'The base table for coupons.',
    'fields' => array(
      'coupon_id' => array(
        'description' => 'The primary identifier for the coupon.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'code' => array(
        'description' => 'The code provided to the customer.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'amount' => array(
        'description' => 'The coupon amount.',
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0,
      ),
      'is_percentage' => array(
        'description' => 'Indicates if this coupon is a percentage or an fixed amount.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'allowed_uses' => array(
       'description' => 'Indicates how many this coupon can be used. 0 means unfinite.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'valid_start_date' => array(
        'description' => 'The Unix timestamp when the coupon becomes valid. 0 indicates that the coupon is not limited by time.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,     
      ),
      'valid_end_date' => array(
        'description' => 'The Unix timestamp when the coupon becomes invalid.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,     
      ),
      'is_active' => array(
        'description' => 'Indicates if this coupon is active or not.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the coupon was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the coupon was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => FALSE,
        'serialize' => TRUE,
        'description' => 'Everything else, serialized.',
      ),
    ),
    'primary key' => array('coupon_id'),
    'indexes' => array(
      'code' => array('code'),
    ),
  );

  $schema['commerce_coupon_log'] = array(
    'description' => 'Stores the usage of coupons.',
    'fields' => array(
      'log_id' => array(
        'description' => 'The primary identifier for the log entry.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'coupon_id' => array(
        'description' => 'The referenced coupon.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The referenced user.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'line_item_id' => array(
        'description' => 'The referenced line item id.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'is_accepted' => array(
        'description' => 'Indicates if this coupon is accepted.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'is_processed' => array(
        'description' => 'Indicates if this coupon is processed. This is set to true, when the order is completed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the log was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the log was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('log_id'),
    'foreign keys' => array(
      'coupon' => array(
        'table' => 'commerce_coupon',
        'columns' => array('coupon_id' => 'coupon_id'),
      ),
      'line_item' => array(
        'table' => 'commerce_line_item',
        'columns' => array('line_item_id' => 'line_item_id'),
      ),
      'user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );




  return $schema;
}
